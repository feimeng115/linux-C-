#include <stdio.h>
#include <stdlib.h>
#include <pthread.h>
#include <unistd.h>
#include <string.h>

/*
 * 从线程通过return终止自身线程
 */
void *thr_fn1(void *arg)
{
    printf("thread 1 returning. \n");

    return (void *)1;  
}

/*
 * 从线程通过pthread_exit终止自身线程
 */
void *thr_fn2(void *arg)
{
    printf("thread 2 exiting. \n");

    pthread_exit((void *)2);  /* Terminate calling thread. */
}

/*
 * 可以通过pthread_cancel终止其它线程
 */
void *thr_fn3(void *arg)
{
    unsigned int n = 0;

    while (1) {
        printf("thread 3 writing: %d \n", n++);
        sleep(1);
    }
}

int main(void)
{
    pthread_t tid;
    void *tret;

    pthread_create(&tid, NULL, thr_fn1, NULL);
    pthread_join(tid, &tret);
    printf("thread 1 exit code: %d \n", (int)tret);

    pthread_create(&tid, NULL, thr_fn2, NULL);
    pthread_join(tid, &tret);
    printf("thread 2 exit code: %d \n", (int)tret);

    pthread_create(&tid, NULL, thr_fn3, NULL);
    sleep(3);
    pthread_cancel(tid);  /* Cancel THREAD immediately or at the next possibility.  */
    pthread_join(tid, &tret);
    printf("thread 3 exit code: %d \n", (int)tret);

    return 0;
}

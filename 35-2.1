#include <stdio.h>
#include <stdlib.h>
#include <pthread.h>
#include <unistd.h>
#include <string.h>

void printi_ids(const char *s);
void *thr_fn(void *arg);

pthread_t ntid;

void *thr_fn(void *arg)
{
    printi_ids(arg);

    printf("thr_fn ends. \n");

    return NULL;
}

void printi_ids(const char *s)
{
    pid_t pid;
    pthread_t tid;

    pid = getpid();         /* Get the process ID of the calling process.  */
    tid = pthread_self();   /* Obtain the identifier of the current thread.  */

    printf("%s pid %uï¼Œ tid %u -- (0x%x)\n", s, (unsigned int)pid,  (unsigned int)tid,  (unsigned int)tid);
}

int main(void)
{
    int err; 

    err = pthread_create(&ntid, NULL, thr_fn, "new thread: ");
    if (err != 0) {
        fprintf(stderr, "can't create thread: %s\n", strerror(err));
        exit(1);
    }

    printi_ids("main thread: ");
    sleep(1);

    printf("main tread ends. \n");

    return 0;
}
